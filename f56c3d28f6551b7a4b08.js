(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{276:function(e,t,i){function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}if("function"!=typeof queueMicrotask){let e=Promise.resolve();try{queueMicrotask=t=>e.then(t).catch(e=>setTimeout(()=>{throw e},0))}catch(e){}}const n=i(22),o=i(144),_=/^([A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}]([A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}_\-0-9\xb7\u{0300}-\u{036f}\u{203f}-\u{2040}.]*[A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u{02ff}\u{0370}-\u{037d}\u{037f}-\u{1fff}\u{200c}-\u{200d}\u{2070}-\u{218f}\u{2c00}-\u{2fef}\u{3001}-\u{d7ff}\u{f900}-\u{fdcf}\u{fdf0}-\u{fffd}\u{10000}-\u{effff}_\-0-9\xb7\u{0300}-\u{036f}\u{203f}-\u{2040}])?)?$/u;class f extends o{constructor(e={}){super(e);let{prefixes:t={},lists:i=null,debug:r=!1,style:s=null}=e;Object.assign(this,{_b_debug:r,_s_indent:"\t",_b_simplify_default_graph:!1,_xc_directives:0,_s_token_prefix:"@prefix"});let o="";if(s){let e=s.graph_keyword||s.graphKeyword||s["graph-keyword"];if(e)if(!0===e)o="GRAPH ";else{if("string"!=typeof e)throw new TypeError("Invalid argument type given for 'graph' token: "+e);if(!/^graph$/i.test(e))throw new Error(`Graph token must equal case-insensitive "GRAPH"; found: "${e}"`);o=e+" "}let t=s.simplify_default_graph||s.simplifyDefaultGraph||s["simplify-default-graph"];t&&(this._b_simplify_default_graph=!!t),s.indent&&(this._s_indent=s.indent.replace(/[^\s]/g,""));let i=s.directives||s.directives;if(i)switch(i){case"sparql":this._xc_directives=1,this._s_token_prefix="prefix";break;case"Sparql":this._xc_directives=3,this._s_token_prefix="Prefix";break;case"SPARQL":this._xc_directives=5,this._s_token_prefix="PREFIX";break;case"turtle":break;case"Turtle":this._xc_directives=2,this._s_token_prefix="@Prefix";break;case"TURTLE":this._xc_directives=4,this._s_token_prefix="@PREFIX";break;default:throw new Error("Value not understood for 'directives' option: "+i)}}this._s_graph_keyword=o,i&&(this._serialize_list_object=function(e,t){let i=this._transcode_list(e);return this._encode_objects(i,t)});let f=this._s_token_prefix,c=1&this._xc_directives?"\n":" .\n",a="";try{for(let e in t){if(!_.test(e))throw new Error(`Invlalid prefix id for application/trig RDF serialization format: '${e}'`);a+=`${f} ${e}: ${n.namedNode(t[e]).verbose()}${c}`}}catch(e){queueMicrotask(()=>{this.emit("error",e)})}a&&this.push(a)}_serialize_prefixes(e){let t=2===this._xc_state?"\n\n":"";this._xc_state=0,this._h_prefixes=function(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){s(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}({},this._h_prefixes);let i=this._s_token_prefix,o=1&this._xc_directives?"\n":" .\n";for(let r in e){if(!_.test(r))throw new Error(`Invlalid prefix id for application/trig RDF serialization format: '${r}'`);t+=`${i} ${r}: ${n.namedNode(e[r]).verbose()}${o}`,this._h_prefixes[r]=e[r]}return n.cache_prefixes(this._h_prefixes),t}_serialize_c3(e){let{_h_prefixes:t,_s_indent:i}=this,r=2!==this._xc_state?"\n":"";this._xc_state=2;let s="",o=null;for(let _ in e){if("`"===_[0]){let t=this._apply_directive(_,e[_]);t.write&&(r+=s+t.write,s=""),t.exit&&(o=t.exit);continue}let f=r.length;r+=s+n.c1_node(_,t).terse(t)+" ";let c="",a="",l=e[_],u=r.length,p=!0,h=null;for(let e in l){if("`"===e[0]){let t=this._apply_directive(e,l[e]);t.write&&(r+=(c?a:"\n")+i+t.write,a="",c=i),t.exit&&(h=t.exit);continue}let s=l[e],o=this._encode_objects(s);if(!o)continue;if(p=!1,"_"===e[0]&&":"===e[1])throw new Error(`Cannot use blank node in predicate position of c3 hash; subject:'${_}', predicate:'${e}'`);let f=n.c1_named_node(e,t);r+=a+c+(f.isRdfTypeAlias?"a":f.terse(t))+" "+o,this._xc_state=2,a=" ;\n",c=i,h&&h()}p?r=r.slice(0,f)+r.slice(u):(s="\n",r+=(a?" ":c)+".\n",o&&o())}return r+="\n",r}_serialize_c4(e){let{_h_prefixes:t,_s_indent:i}=this,r=2!==this._xc_state?"\n":"";this._xc_state=2;let s=this._b_simplify_default_graph,o=this._s_graph_keyword,_=null;for(let f in e){if("`"===f[0]){let t=this._apply_directive(f,e[f]);t.write&&(r+=t.write),t.exit&&(_=t.exit);continue}let c=n.c1_node(f,t).terse(t);r+=c?o+c+" {\n":s?"":o+"{\n";let a=!c&&s?"":i;this._xc_state=2;let l=e[f],u="",p=null;for(let e in l){if("`"===e[0]){let t=this._apply_directive(e,l[e]);t.write&&(r+=u+a+t.write,u=""),t.exit&&(p=t.exit);continue}let s=r.length;r+=u+a+n.c1_node(e,t).terse(t)+" ";let o="",_="",c=l[e],h=r.length,d=!0,x=null;for(let s in c){if("`"===s[0]){let e=this._apply_directive(s,c[s]);e.write&&(r+=(o?_:"\n")+i+a+e.write,_="",o=i+a),e.exit&&(x=e.exit);continue}let l=c[s],u=this._encode_objects(l);if(!u)continue;if(d=!1,"_"===s[0]&&":"===s[1])throw new Error(`Cannot use blank node in predicate position of c4 hash; graph:'${f}', subject:'${e}', predicate:'${s}'`);let p=n.c1_named_node(s,t);r+=_+o+(p.isRdfTypeAlias?"a":p.terse(t))+" "+u,this._xc_state=2,_=" ;\n",o=i+a,x&&x()}d?r=r.slice(0,s)+r.slice(h):(u="\n",r+=(_?" ":o)+".\n",p&&p())}r+=(c||!s?"}\n":"")+"\n",_&&_()}return r}_encode_objects(e,t=1){let{_h_prefixes:i,_s_indent:r,_hm_coercions:s}=this;switch(typeof e){case"string":return n.c1(e,i).terse(i);case"number":return n.number(e).terse(i);case"boolean":return n.boolean(e).terse(i);case"object":if(null===e)throw new Error("Refusing to serialize null value given as an object of quad");if(Array.isArray(e)||e instanceof Set){let i="",r="";for(let s of e)Array.isArray(s)?i+=r+this._serialize_list_object(s,t):i+=r+this._encode_objects(s,t),r=", ";return i}if(Object===e.constructor){let s="[",o=!0,_=null;for(let f in e)if(o=!1,s+="\n"+r.repeat(2+t),"`"!==f[0])s+=n.c1(f,i).terse(i)+" "+this._encode_objects(e[f],t+1)+" ;";else{let t=this._apply_directive(f,e[f]);t.write&&(s+=t.write),t.exit&&(_=t.exit)}return s+=(o?"":"\n"+r.repeat(1+t))+"]",_&&_(),s}if(s.has(e.constructor)){return s.get(e.constructor).apply(this,[e,t]).terse(i)}if(e.isGraphyTerm)return e.terse(i);if(e.termType)return n.from.term(e).terse(i);default:throw new Error(`Bad type for RDF object: [${typeof e}] ${e?e.constructor:e}`)}}_serialize_collection_object(e,t){let i=this._s_indent,r="(";for(let s of e){let e="";e=Array.isArray(s)?this._serialize_collection_object(s,t+1):this._encode_objects(s,t+1),r+="\n"+i.repeat(2+t)+e}return e.length&&(r+="\n"+i.repeat(1+t)),r+=")",r}_serialize_quad(e){let t=this._h_prefixes,i=n.from.quad(e),r=i.graph.terse(t);this._s_push+=(2!==this._xc_state?"\n":"")+this._s_graph_keyword+(r?r+" ":"")+"{\n\t"+i.subject.terse(t)+" "+i.predicate.terse(t)+" "+i.object.terse(t)+" .\n}\n\n",this._xc_state=2}}Object.assign(f.prototype,{anonymous_blank_nodes:!0,_serialize_c3r:f.prototype._serialize_c3,_serialize_c4r:f.prototype._serialize_c4,_serialize_comment:o.prototype._serialize_hash_comment,_serialize_list_object:f.prototype._serialize_collection_object}),e.exports=function(e){return new f(e)}}}]);
//# sourceMappingURL=f56c3d28f6551b7a4b08.js.map